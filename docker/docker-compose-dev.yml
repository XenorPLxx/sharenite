version: '3'
networks:
  development:
  test:
volumes:
  db_data:
  redis_data:
  kafka_data:
  zookeeper_data:
  gem_cache:
  shared_data:
  test_gem_cache:
  test_shared_data:
services:

  sharenite-redis:
    image: redis:7-alpine
    command: redis-server
    networks:
      - development
      - test
    volumes:
      - shared_data:/var/shared/redis
      - redis_data:/data
    ports:
      - 6379:6379

  sharenite-database:
    image: postgres:14-alpine
    volumes:
      - db_data:/var/lib/postgresql/data
      - shared_data:/var/shared
    networks:
      - development
      - test
    environment:
      POSTGRES_USER: sharenite
      POSTGRES_PASSWORD: sharenite
    ports:
      - 5432:5432

  sharenite-webapp:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - ../:/var/app
      - shared_data:/var/shared
      - gem_cache:/usr/local/bundle/gems
    networks:
      - development
    ports:
      - 3000:3000
    stdin_open: true
    tty: true
    entrypoint: dev-entrypoint.sh
    command: ['rails', 'server', '-p', '3000', '-b', '0.0.0.0']
    environment:
      RAILS_ENV: development
      BUNDLE_GEMS__KARAFKA__IO: "${BUNDLE_GEMS__KARAFKA__IO}"
      KARAFKA_PRO_LICENSE_ID: "${KARAFKA_PRO_LICENSE_ID}"
      KARAFKA_UI_SECRET: "${KARAFKA_UI_SECRET}"
      IGDB_CLIENT_ID: "${IGDB_CLIENT_ID}"
      IGDB_CLIENT_SECRET: "${IGDB_CLIENT_SECRET}"
      WEB_CONSOLE_ALLOWED_NETWORKS: "${WEB_CONSOLE_ALLOWED_NETWORKS}"
    depends_on:
      - sharenite-database

  sharenite-js:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - ../:/var/app
      - shared_data:/var/shared
      - gem_cache:/usr/local/bundle/gems
    networks:
      - development
    stdin_open: true
    tty: true
    entrypoint: dev-entrypoint.sh
    command: ['yarn', 'build', '--watch']
    environment:
      RAILS_ENV: development
    depends_on:
      - sharenite-database

  sharenite-css:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - ../:/var/app
      - shared_data:/var/shared
      - gem_cache:/usr/local/bundle/gems
    networks:
      - development
    stdin_open: true
    tty: true
    entrypoint: dev-entrypoint.sh
    command: ['yarn', 'build:css', '--watch']
    environment:
      RAILS_ENV: development
    depends_on:
      - sharenite-database

  sharenite-karafka:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - ../:/var/app
      - shared_data:/var/shared
      - gem_cache:/usr/local/bundle/gems
    networks:
      - development
    stdin_open: true
    tty: true
    entrypoint: dev-entrypoint.sh
    command: ['karafka', 'server']
    environment:
      RAILS_ENV: development
      BUNDLE_GEMS__KARAFKA__IO: "${BUNDLE_GEMS__KARAFKA__IO}"
      KARAFKA_PRO_LICENSE_ID: "${KARAFKA_PRO_LICENSE_ID}"
      KARAFKA_UI_SECRET: "${KARAFKA_UI_SECRET}"
      IGDB_CLIENT_ID: "${IGDB_CLIENT_ID}"
      IGDB_CLIENT_SECRET: "${IGDB_CLIENT_SECRET}"
    depends_on:
      - sharenite-database
      - sharenite-kafka

  sharenite-zookeeper:
    image: bitnami/zookeeper:3.8
    ports:
      - '2181:2181'
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    volumes:
      - zookeeper_data:/bitnami/zookeeper
    networks:
      - development

  sharenite-zoonavigator:
    image: elkozmon/zoonavigator
    ports:
      - '9000:9000'
    environment:
      - HTTP_PORT=9000
    networks:
      - development
    depends_on:
      - sharenite-zookeeper

  sharenite-kafka:
    image: bitnami/kafka:3.5
    ports:
      - '9092:9092'
    environment:
      KAFKA_CFG_ADVERTISED_HOST_NAME: sharenite-kafka
      KAFKA_CFG_ADVERTISED_PORT: 9092
      KAFKA_CFG_ZOOKEEPER_CONNECT: sharenite-zookeeper:2181
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
      ALLOW_PLAINTEXT_LISTENER: 'yes'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - kafka_data:/bitnami/kafka
    networks:
      - development
    depends_on:
      - sharenite-zookeeper

  sharenite-kafka-ui:
    image: provectuslabs/kafka-ui
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=sharenite-kafka:9092
    networks:
      - development
    depends_on:
      - sharenite-kafka

  # sharenite-test:
  #   image: sharenite_sharenite_app
  #   volumes:
  #     - ../:/var/app
  #     - test_shared_data:/var/shared
  #     - test_gem_cache:/usr/local/bundle/gems
  #   networks:
  #     - test
  #   ports:
  #     - 3001:3000
  #   stdin_open: true
  #   tty: true
  #   entrypoint: test-entrypoint.sh
  #   command: ["rails", "-v"]
  #   environment:
  #     RAILS_ENV: test
  #   depends_on:
  #     - sharenite-database